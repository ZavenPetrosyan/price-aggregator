services:
  nestjs:
    build:
      context: .
    container_name: price-api
    restart: always
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      provider1:
        condition: service_healthy
      provider2:
        condition: service_healthy
      provider3:
        condition: service_healthy
    networks:
      - app_network
    command: >
      sh -c "npm install && npx prisma generate && npx prisma migrate dev --name init && npm run start:debug"

  postgres:
    image: postgres:15
    restart: always
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nestdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  provider1:
    image: node:20
    container_name: provider1
    working_dir: /app
    volumes:
      - ./providers:/app
    command: >
      sh -c "npm install -g json-server && json-server --watch provider1.json --port 4001"
    ports:
      - "4001:4001"
    networks:
      - app_network
    healthcheck:
      test: curl --fail http://localhost:4001 || exit 1
      interval: 10s
      retries: 5

  provider2:
    image: node:20
    container_name: provider2
    working_dir: /app
    volumes:
      - ./providers:/app
    command: >
      sh -c "npm install -g json-server && json-server --watch provider2.json --port 4002"
    ports:
      - "4002:4002"
    networks:
      - app_network
    healthcheck:
      test: curl --fail http://localhost:4002 || exit 1
      interval: 10s
      retries: 5

  provider3:
    image: node:20
    container_name: provider3
    working_dir: /app
    volumes:
      - ./providers:/app
    command: >
      sh -c "npm install -g json-server && json-server --watch provider3.json --port 4003"
    ports:
      - "4003:4003"
    networks:
      - app_network
    healthcheck:
      test: curl --fail http://localhost:4003 || exit 1
      interval: 10s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
